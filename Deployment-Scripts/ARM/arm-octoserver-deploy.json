{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "environmentCode": {
      "type": "string"
    },
    "subscriptionCode": {
      "type": "string"
    },
    "facility": {
      "type": "string"
    },
    "instance": {
      "type": "string"
    },
    "role": {
      "type": "string"
    },
    "resourceNamePostfix": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },

    "fileUris": {
      "type": "array",
      "defaultValue": [
        "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/configure-octopus-server.ps1"
      ]
    },
    "commandToExecute": {
      "type": "string",
      "defaultValue": "powershell -ExecutionPolicy Unrestricted -File configure-octopus-server.ps1"
    } 
  },

  "variables": {
    "location": "[parameters('location')]",
    "baseName": "[concat('-', parameters('resourceNamePostfix'))]",

    "octoBaseName": "[concat('octo-svc', variables('baseName'))]",
    "stgAcctName": "[concat('stg', replace(variables('octoBaseName'), '-', ''))]",

    "octoBoxName": "[concat('o1-', variables('octoBaseName'))]",
    "vmName": "[variables('octoBoxName')]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "osDiskName": "[concat('osdisk-', variables('octoBoxName'))]",
    "vmSize": "Standard_D1_v2",
    "adminUserName": "wsadmin",
    "adminPassword": "Workspace!Octo!2018",
    "windowsOsVersion": "2016-Datacenter",

    "computerName": "octo1",
    "vnetName": "[concat(parameters('environmentCode'), '-vnet', variables('baseName'))]",
    "vnetRgName": "[concat('rg-vnet', variables('baseName'))]",
    "vnetID": "[resourceId(variables('vnetRgName'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "snName": "default",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('snName'))]",

    "storageAccountContainerName": "vhds",
    "nicName": "[concat('nic1-', variables('octoBaseName'))]",

    "pipName": "[concat('pip-', variables('octoBaseName'))]",

    "pipRg": "[concat('rg-pips', variables('baseName'))]",
    "pipId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",

    "fileUris": "[parameters('fileUris')]",
    "commandToExecute": "[parameters('commandToExecute')]"
  },

  "resources": [
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "NIC",
        "Environment": "[parameters('environment')]",
        "EnvironmentCode": "[parameters('environmentCode')]",
        "Facility": "[parameters('facility')]",
        "Location": "[parameters('location')]",
        "Instance": "[parameters('instance')]",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]",
        "SubscriptionCode": "[parameters('subscriptionCode')]",
        "DeleteOrder": "2"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('pipName')]"
        }
      },
      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2017-06-01",
      "location": "[variables('location')]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "NIC",
        "Environment": "[parameters('environment')]",
        "EnvironmentCode": "[parameters('environmentCode')]",
        "Facility": "[parameters('facility')]",
        "Location": "[parameters('location')]",
        "Instance": "[parameters('instance')]",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]",
        "SubscriptionCode": "[parameters('subscriptionCode')]",
        "DeleteOrder": "1"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": { "id": "[variables('pipId')]" },
              "subnet": {
                "id":
                  "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'default')]",
                "primary": true,
                "privateIPAddressVersion": "IPv4"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "primary": true,
        "virtualMachine": {
          "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('octoBoxName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
      ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('octoBoxName')]",
      "apiVersion": "2017-03-30",
      "location": "[variables('location')]",

      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "Server",
        "Environment": "[parameters('environment')]",
        "EnvironmentCode": "[parameters('environmentCode')]",
        "Facility": "[parameters('facility')]",
        "Location": "[parameters('location')]",
        "Instance": "[parameters('instance')]",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]",
        "SubscriptionCode": "[parameters('subscriptionCode')]",
        "DeleteOrder":  "0" 
      },

      "properties": {
        "hardwareProfile": { "vmSize": "[variables('vmSize')]" },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "SQL2016SP1-WS2016",
            "sku": "Express",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(variables('octoBoxName'),'-osdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS",
              "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('octoBoxName'))]"
            },
            "diskSizeGB": 128
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('octoBoxName'),'-datadisk1')]",
              "createOption": "Empty",
              "caching": "ReadOnly",
              "managedDisk": {
                "storageAccountType": "Premium_LRS",
                "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('octoBoxName'))]"
              },
              "diskSizeGB": 1023
            }
        },
        "osProfile": {
          "computerName": "[variables('computerName')]",
          "adminUsername": "[variables('adminUserName')]",
          "adminPassword": "[variables('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "configure-octopus-server",
          "apiVersion": "2017-03-30",
          "location": "[variables('location')]",
          "dependsOn": [
            "[variables('octoBoxName')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('fileUris')]",
              "commandToExecute": "[variables('commandToExecute')]"
            }
          }
        }
      ],

      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ]
    }

  ],

  "outputs": {
  }
}

