{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

      "role": {
        "type": "string"
      },

      "resourceNamePostfix": {
          "type": "string"
      },

      "adminUserName": {
        "type": "string"
      },

      "adminPassword": {
        "type": "securestring"
      },

      "fileUris": {
        "type": "array",
        "defaultValue": [
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/move-dvd.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/install-workspace-db.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/set-drive-permissions.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/install-ssms.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/install-sql-server.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/install-net45.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/install-iis.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/initialize-data-disk.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/create-user-account.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/DSC/SqlConfigurationData.psd1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/DSC/SqlStandaloneDSC.ps1",
          "https://raw.githubusercontent.com/MHWorkspaceCC/Workspace/master/Deployment-Scripts/CSE/configure-dev-workstation.ps1"
        ]
      },

      "commandToExecute": {
        "type": "string",
        "defaultValue": "powershell -ExecutionPolicy Unrestricted -File configure-dev-workstation.ps1"
      },

      "vmSize":{
        "type": "string",
        "defaultValue": "Standard_D1_v2"
      },

      "computerName":{
        "type": "string",
        "defaultValue": "dib"
      },

      "saUserName": {
        "type": "string"
      },
  
      "saPassword": {
        "type": "securestring"
      },
  
      "loginUserName": {
        "type": "string"
      },
  
      "loginPassword": {
        "type": "securestring"
      },
    
      "installersStgAcctKey": {
        "type": "string"
      },
  
      "installersStgAcctName": {
        "type": "string"
      },
  
      "dbBackupsStorageAccountKey": {
        "type": "string"
      },
  
      "dbBackupsStorageAccountName": {
        "type": "string"
      },
  
      "databaseName": {
        "type": "string"
      },
  
      "dbBackupBlobName": {
        "type": "string"
      },
  
      "dbMdfFileName": {
        "type": "string"
      },
  
      "dbLdfFileName": {
        "type": "string"
      }
  },

  "variables": {
    "baseName": "[concat('dev-', parameters('resourceNamePostfix'))]",

    "stgAcctName": "[concat('stg', replace(variables('baseName'), '-', ''))]",
    "saSkuName": "Standard_LRS",

    "boxName": "[concat(parameters('computerName'), '-vm-', variables('baseName'))]",
    "vmName": "[variables('boxName')]",

    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "osDiskName": "[concat('osdisk-', variables('boxName'))]",
    "dataDiskName": "[concat('datadisk-', variables('boxName'))]",
    "vmSize": "[parameters('vmSize')]",
    "adminUserName": "[parameters('adminUserName')]",
    "adminPassword": "[parameters('adminPassword')]",
    "windowsOsVersion": "2016-Datacenter",

    "dataDiskID": "[resourceId('Microsoft.Compute/disks', variables('dataDiskName'))]",

    "computerName": "[parameters('computerName')]",
    "vnetName": "[concat('d0-vnet-', parameters('resourceNamePostfix'))]",
    "vnetRgName": "[concat('rg-vnet-', parameters('resourceNamePostfix'))]",
    "vnetID": "[resourceId(variables('vnetRgName'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "snName": "[concat('sn-', variables('baseName'))]",
    "subnetRef": "[concat(variables('vnetID'), '/subnets/', variables('snName'))]",

    "storageAccountContainerName": "vhds",
    "nicName": "[concat('nic1-', variables('boxName'))]",
    "nicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",

    "pipName": "[concat('pip-', variables('boxName'))]",
    "pipId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('pipName'))]",

    "fileUris": "[parameters('fileUris')]",
    "commandToExecute": "[concat(parameters('commandToExecute'), ' -installersStgAcctKey ', parameters('installersStgAcctKey'), ' -saUserName ', parameters('saUserName'), ' -saPassword ', parameters('saPassword'), ' -loginUserName ', parameters('loginUserName'), ' -loginPassword ', parameters('loginPassword'), ' -installersStgAcctName ', parameters('installersStgAcctName'), ' -dbBackupsStorageAccountKey ', parameters('dbBackupsStorageAccountKey'), ' -dbBackupsStorageAccountName ', parameters('dbBackupsStorageAccountName'), ' -databaseName ', parameters('databaseName'), ' -dbBackupBlobName ', parameters('dbBackupBlobName'), ' -dbMdfFileName ', parameters('dbMdfFileName'), ' -dbLdfFileName ', parameters('dbLdfFileName'))]"
  },

  "resources": [
    {
      "type": "Microsoft.Compute/disks",
      "name": "[variables('dataDiskName')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "sku": {
          "name": "Standard_LRS"
      },
      "properties": {
          "creationData": {
              "createOption": "Empty"
          },
          "diskSizeGB": 1023
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pipName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "PIP",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "dnsSettings": {
          "domainNameLabel": "[variables('pipName')]"
        }
      },
      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "NIC",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": { "id": "[variables('pipId')]" },
              "subnet": { "id": "[variables('subnetRef')]" },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [],
          "appliedDnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "primary": true,
        "virtualMachine": {
          "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('boxName'))]"
        }
      },
      "dependsOn": [
        "[variables('pipId')]"
      ]
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('boxName')]",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "DevWorkstation",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]"
      },
      "identity": {
        "type": "systemAssigned"
      },
      "properties": {
        "hardwareProfile": { "vmSize": "[variables('vmSize')]" },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[variables('osDiskName')]",
            "caching": "ReadWrite",
            "createOption": "FromImage" 
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[variables('dataDiskName')]",
              "createOption": "Attach",
              "managedDisk": {
                "id": "[variables('dataDiskId')]"
              }
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('computerName')]",
          "adminUsername": "[variables('adminUserName')]",
          "adminPassword": "[variables('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": false
          },
          "secrets": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "configure-dev-workstation",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[variables('boxName')]"
          ],
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": "[parameters('fileUris')]",
              "commandToExecute": "[variables('commandToExecute')]"
            }
          }
        }
      ],
      "dependsOn": [
        "[variables('nicId')]",
        "[variables('dataDiskId')]"
      ]    
    }
  ],

  "outputs": {
  }
}
