{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "environmentCode": {
      "type": "string"
    },
    "facility": {
      "type": "string"
    },
    "peerFacility": {
      "type": "string"
    },
    "instance": {
      "type": "string"
    },
    "subscriptionCode": {
      "type": "string"
    },
    "role": {
      "type": "string"
    },
    "resourceNamePostfix": {
      "type": "string"
    },
    "peerResourceNamePostfix": {
      "type": "string"
    },
    "mainVnetCidrPrefix": {
      "type": "string"
    },
    "peerVnetCidrPrefix": {
      "type": "string"
    },
    "mainLocation": {
      "type": "string"
    },
    "peerLocation": {
      "type": "string"
    },
    "sharedKey": {
      "type": "string"
    }
  },
  "variables": {
    "thisFacility": "[parameters('facility')]",
    "thatFacility": "[parameters('peerFacility')]",
    "thisLocation": "[parameters('mainLocation')]",
    "thatLocation": "[parameters('peerLocation')]",
    "thisAddressPrefix": "[parameters('mainVnetCidrPrefix')]",
    "thatAddressPrefix": "[parameters('peerVnetCidrPrefix')]",
    "thisVnetCIDR": "[concat(variables('thisAddressPrefix'), '0.0/16')]",
    "thatVnetCIDR": "[concat(variables('thatAddressPrefix'), '0.0/16')]",
    "thisBaseName": "[concat('-', parameters('resourceNamePostfix'))]",
    "thatBaseName": "[concat('-', parameters('peerResourceNamePostfix'))]",
    "thisGatewayName": "[concat('vng-vpn', variables('thisBaseName'))]",
    "thatGatewayName": "[concat('vng-vpn', variables('thatBaseName'))]",
    "thisVpnConnectionName": "[concat('conn-vpn', variables('thisBaseName'))]",
    "thatVpnConnectionName": "[concat('conn-vpn', variables('thatBaseName'))]",
    "thisVnetRg": "[concat('rg-vnet', variables('thisBaseName'))]",
    "thatVnetRg": "[concat('rg-vnet', variables('thatBaseName'))]",
    "thisVnetName": "[concat(parameters('environmentCode'), '-vnet', variables('thisBaseName'))]",
    "thisSubnetName": "[concat('sn-vpn', variables('thisBaseName'))]",
    "thatVnetName": "[concat(parameters('environmentCode'), '-vnet', variables('thatBaseName'))]",
    "thatSubnetName": "[concat('sn-vpn', variables('thatBaseName'))]",
    "thisPipName": "[concat('pip-vpn', variables('thisBaseName'))]",
    "thatPipName": "[concat('pip-vpn', variables('thatBaseName'))]",
    "thisBgpAddress": "[concat(variables('thisAddressPrefix'), '100.254')]",
    "thatBgpAddress": "[concat(variables('thatAddressPrefix'), '100.254')]",
    "thisPipRgName": "[concat('rg-pips', variables('thisBaseName'))]",
    "thatPipRgName": "[concat('rg-pips', variables('thatBaseName'))]",
    "thisVnetRgName": "[concat('rg-vnet', variables('thisBaseName'))]",
    "thatVnetRgName": "[concat('rg-vnet', variables('thatBaseName'))]",
    "sharedKey": "[parameters('sharedKey')]",

    "sharedState": {
      "thisFacility": "[parameters('facility')]",
      "thatFacility": "[parameters('peerFacility')]",
      "thisLocation": "[parameters('mainLocation')]",
      "thatLocation": "[parameters('peerLocation')]",
      "thisVnetRgName": "[variables('thisVnetRgName')]",
      "thatVnetRgName": "[variables('thatVnetRgName')]",
      "thisGatewayName": "[variables('thisGatewayName')]",
      "thatGatewayName": "[variables('thatGatewayName')]",
      "thisPipRgName": "[variables('thisPipRgName')]",
      "thatPipRgName": "[variables('thatPipRgName')]",
      "thisPipName": "[variables('thisPipName')]",
      "thatPipName": "[variables('thatPipName')]",
      "thisVnetName": "[variables('thisVnetName')]",
      "thatVnetName": "[variables('thatVnetName')]",
      "thisBgpAddress": "[variables('thisBgpAddress')]",
      "thatBgpAddress": "[variables('thatBgpAddress')]",
      "thisVpnConnectionName": "[variables('thisVpnConnectionName')]",
      "thatVpnConnectionName": "[variables('thatVpnConnectionName')]",
      "sharedKey": "[variables('sharedKey')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('sharedState').thisGatewayName]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('mainLocation')]",
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "VpnGateway",
        "Environment": "[parameters('environment')]",
        "EnvironmentCode": "[parameters('environmentCode')]",
        "Facility": "[parameters('facility')]",
        "Location": "[parameters('mainLocation')]",
        "Instance": "[parameters('instance')]",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]"
      },
      "scale": null,
      "properties": {
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId(variables('sharedState').thisPipRgName, 'Microsoft.Network/publicIPAddresses', variables('sharedState').thisPipName)]"
              },
              "subnet": {
                "id": "[resourceId(variables('sharedState').thisVnetRgName, 'Microsoft.Network/virtualNetworks/subnets', variables('sharedState').thisVnetName, 'GatewaySubnet')]"
              }
            }
          }
        ],
        "sku": {
          "name": "VpnGw1",
          "tier": "VpnGw1",
          "capacity": 2
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": false,
        "vpnClientConfiguration": {
          "vpnClientProtocols": [
            "SSTP",
            "IkeV2"
          ],
          "vpnClientRootCertificates": [],
          "vpnClientRevokedCertificates": []
        },
        "bgpSettings": {
          "asn": 65515,
          "bgpPeeringAddress": "[variables('sharedState').thisBgpAddress]",
          "peerWeight": 0
        }
      },
      "dependsOn": [
      ]
    },

    {
      "apiVersion": "2017-05-10",
      "name": "thatGatewayNestedTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('sharedState').thatVnetRgName]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworkGateways",
              "name": "[variables('sharedState').thatGatewayName]",
              "location": "[variables('sharedState').thatLocation]",
              "apiVersion": "2017-06-01",
              "scale": null,
              "tags": {
                "Role": "[parameters('role')]",
                "ResourceType": "VpnGateway",
                "Environment": "[parameters('environment')]",
                "EnvironmentCode": "[parameters('environmentCode')]",
                "Facility": "[parameters('peerFacility')]",
                "Location": "[parameters('peerLocation')]",
                "Instance": "[parameters('instance')]",
                "ResourceNamePostfix": "[parameters('peerResourceNamePostfix')]"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "default",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId(variables('sharedState').thatPipRgName, 'Microsoft.Network/publicIPAddresses', variables('sharedState').thatPipName)]"
                      },
                      "subnet": {
                        "id": "[resourceId(variables('sharedState').thatVnetRgName, 'Microsoft.Network/virtualNetworks/subnets', variables('sharedState').thatVnetName, 'GatewaySubnet')]"
                      }
                    }
                  }
                ],
                "sku": {
                  "name": "VpnGw1",
                  "tier": "VpnGw1",
                  "capacity": 2
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                  "vpnClientProtocols": [
                    "SSTP",
                    "IkeV2"
                  ],
                  "vpnClientRootCertificates": [],
                  "vpnClientRevokedCertificates": []
                },
                "bgpSettings": {
                  "asn": 65515,
                  "bgpPeeringAddress": "[variables('sharedState').thatBgpAddress]",
                  "peerWeight": 0
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
      ]
    },

    {
      "type": "Microsoft.Network/connections",
      "name": "[variables('sharedState').thisVpnConnectionName]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('mainLocation')]",
      "scale": null,
      "tags": {
        "Role": "[parameters('role')]",
        "ResourceType": "VpnConnection",
        "Environment": "[parameters('environment')]",
        "EnvironmentCode": "[parameters('environmentCode')]",
        "Facility": "[parameters('facility')]",
        "Location": "[parameters('mainLocation')]",
        "Instance": "[parameters('instance')]",
        "ResourceNamePostfix": "[parameters('resourceNamePostfix')]"
      },
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId(variables('sharedState').thisVnetRgName, 'Microsoft.Network/virtualNetworkGateways', variables('sharedState').thisGatewayName)]",
          "properties": {}
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId(variables('sharedState').thatVnetRgName, 'Microsoft.Network/virtualNetworkGateways', variables('sharedState').thatGatewayName)]",
          "properties": {}
        },
        "connectionType": "Vnet2Vnet",
        "routingWeight": 0,
        "enableBgp": false,
        "usePolicyBasedTrafficSelectors": false,
        "ipsecPolicies": [],
        "sharedKey": "[variables('sharedState').sharedKey]"
      },
      "dependsOn": [
        "[variables('sharedState').thisGatewayName]",
        "thatGatewayNestedTemplate"
      ]
    },

    {
      "name": "thatVpnConnectionTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[variables('sharedState').thatVnetRgName]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/connections",
              "name": "[variables('sharedState').thatVpnConnectionName]",
              "apiVersion": "2017-06-01",
              "location": "[variables('sharedState').thatLocation]",
              "scale": null,
              "tags": {
                "Role": "[parameters('role')]",
                "ResourceType": "VpnConnection",
                "Environment": "[parameters('environment')]",
                "EnvironmentCode": "[parameters('environmentCode')]",
                "Facility": "[parameters('peerFacility')]",
                "Location": "[parameters('peerLocation')]",
                "Instance": "[parameters('instance')]",
                "ResourceNamePostfix": "[parameters('peerResourceNamePostfix')]"
              },
              "properties": {
                "virtualNetworkGateway1": {
                  "id": "[resourceId(variables('sharedState').thatVnetRgName, 'Microsoft.Network/virtualNetworkGateways', variables('sharedState').thatGatewayName)]",
                  "properties": {}
                },
                "virtualNetworkGateway2": {
                  "id": "[resourceId(variables('sharedState').thisVnetRgName, 'Microsoft.Network/virtualNetworkGateways', variables('sharedState').thisGatewayName)]",
                  "properties": {}
                },
                "connectionType": "Vnet2Vnet",
                "routingWeight": 0,
                "enableBgp": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "sharedKey": "[variables('sharedState').sharedKey]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[variables('sharedState').thisGatewayName]",
        "thatGatewayNestedTemplate"
      ]
    }
  ],
  "outputs": {
    "sharedState": { "type": "object", "value": "[variables('sharedState')]" }
  }
}