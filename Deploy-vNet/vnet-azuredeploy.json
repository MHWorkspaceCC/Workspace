{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "sb",
      "allowedValues": [
        "sb",
        "dv",
        "qa",
        "pd"
      ],
      "metadata": {
        "description": "The envirnoment: Sandbox (sb), Dev (dv), QA (qa), Prod (qa)"
      }
    },
    "facility": {
      "type": "string",
      "defaultValue": "pri",
      "allowedValues": [
        "pr",
        "dr"
      ],
      "metadata": {
        "description": "The location: 'pri' == westus, 'dr' == eastus"
      }
    }
  },

  "variables": {
    "vnName": "vn1",
    "location": "[if(equals(parameters('facility'), 'pr'), 'westus', 'eastus')]",
    "environmentFacility": "[concat(parameters('environment'), parameters('facility'))]",
    "baseName": "[concat('-ws-', variables('environmentFacility'))]",

    "addressPrefix": "[if(equals(parameters('facility'), 'pri'), '10.200.', '10.201.')]",

    "vnetCIDR": "[concat(variables('addressPrefix'), '0.0/16')]",
    "jumpCIDR": "[concat(variables('addressPrefix'), '3.0/24')]",
    "dbCIDR": "[concat(variables('addressPrefix'), '5.0/24')]",
    "defaultCIDR": "[concat(variables('addressPrefix'), '0.0/24')]",
    "webCIDR": "[concat(variables('addressPrefix'), '1.0/24')]",

    "vnetName": "[concat(variables('vnName'), '-vnet', variables('baseName'))]",

    "defaultSnName": "default",
    "webSnName": "[concat('sn-web', variables('baseName'))]",
    "jumpSnName": "[concat('sn-jump', variables('baseName'))]",
    "dbSnName": "[concat('sn-db', variables('baseName'))]",

    "dbNsgName": "[concat('nsg-db', variables('baseName'))]",
    "jumpNsgName": "[concat('nsg-jump', variables('baseName'))]",
    "webNsgName": "[concat('nsg-web', variables('baseName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('jumpNsgName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      },

      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('dbNsgName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "SQL_FROM_WEB",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "[variables('webCIDR')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "SQL_FROM_JUMP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "1433",
              "sourceAddressPrefix": "[variables('jumpCIDR')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      },

      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCIDR')]"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "[variables('defaultCIDR')]"
            }
          },
          {
            "name": "[variables('jumpSnName')]",
            "properties": {
              "addressPrefix": "[variables('jumpCIDR')]"
            }
          },
          {
            "name": "[variables('dbSnName')]",
            "properties": {
              "addressPrefix": "[variables('dbCIDR')]"
            }
          }

        ],
        "virtualNetworkPeerings": []
      },
      "dependsOn": []
    },

    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('vnetName'), '/', variables('defaultSnName'))]",
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "provisioningState": "Succeeded",
        "addressPrefix": "[variables('defaultCIDR')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ]
    },

    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('vNetName'), '/', variables('jumpSnName'))]",
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "addressPrefix": "[variables('jumpCIDR')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpNsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ]
    },

    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "name": "[concat(variables('vNetName'), '/', variables('dbSnName'))]",
      "apiVersion": "2017-06-01",
      "scale": null,
      "properties": {
        "addressPrefix": "[variables('dbCIDR')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dbNsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ]
    }

  ],
  "outputs": {
    "vnetName": {
      "type": "string",
      "value": "[variables('vNetName')]"
    },
    "vnetCIDR": {
      "type": "string",
      "value": "[variables('vNetCIDR')]"
    },
    "jumpSnCIDR": {
      "type": "string",
      "value": "[variables('jumpCIDR')]"
    }
  }
}